"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[327],{3905:(e,t,i)=>{i.d(t,{Zo:()=>c,kt:()=>h});var a=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function r(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function o(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?r(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):r(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function p(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)i=r[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var l=a.createContext({}),s=function(e){var t=a.useContext(l),i=t;return e&&(i="function"==typeof e?e(t):o(o({},t),e)),i},c=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,r=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(i),h=n,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||r;return i?a.createElement(m,o(o({ref:t},c),{},{components:i})):a.createElement(m,o({ref:t},c))}));function h(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=i.length,o=new Array(r);o[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:n,o[1]=p;for(var s=2;s<r;s++)o[s]=i[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,i)}u.displayName="MDXCreateElement"},4134:(e,t,i)=>{i.r(t),i.d(t,{contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>p,toc:()=>l});var a=i(7462),n=(i(7294),i(3905));const r={sidebar_position:5},o="Validating receipts",p={unversionedId:"usage_instructions/receipt_validation",id:"usage_instructions/receipt_validation",title:"Validating receipts",description:"Since react-native-iap@0.3.16, we support receipt validation.",source:"@site/docs/usage_instructions/receipt_validation.md",sourceDirName:"usage_instructions",slug:"/usage_instructions/receipt_validation",permalink:"/docs/usage_instructions/receipt_validation",editUrl:"https://github.com/dooboolab/react-native-iap/edit/main/docs/docs/usage_instructions/receipt_validation.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Restoring purchases",permalink:"/docs/usage_instructions/restoring_purchases"},next:{title:"Using hooks",permalink:"/docs/usage_instructions/using_hooks"}},l=[{value:"With IAPHUB",id:"with-iaphub",children:[],level:3},{value:"With Google Play",id:"with-google-play",children:[],level:3},{value:"With App Store",id:"with-app-store",children:[{value:"Local Validation",id:"local-validation",children:[],level:4},{value:"Validating with the App Store",id:"validating-with-the-app-store",children:[],level:4}],level:3},{value:"Example backend (Node.js)",id:"example-backend-nodejs",children:[],level:3}],s={toc:l};function c(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,a.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"validating-receipts"},"Validating receipts"),(0,n.kt)("p",null,"Since ",(0,n.kt)("inlineCode",{parentName:"p"},"react-native-iap@0.3.16"),", we support receipt validation."),(0,n.kt)("h3",{id:"with-iaphub"},"With ",(0,n.kt)("a",{parentName:"h3",href:"https://www.iaphub.com"},"IAPHUB")),(0,n.kt)("p",null,"IAPHUB is a service that takes care of the ios/android receipt validation for you, you can set up ",(0,n.kt)("a",{parentName:"p",href:"https://dashboard.iaphub.com/documentation/webhook"},"webhooks")," in order to get notifications delivered automatically to your server on events such as a purchase, a subscription renewal..."),(0,n.kt)("p",null,"You can use it by calling the API manually to ",(0,n.kt)("a",{parentName:"p",href:"https://dashboard.iaphub.com/documentation/api/post-receipt"},"process your receipt")," or use the ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/iaphub/react-native-iaphub"},"react-native-iaphub")," module that is just a wrapper of react-native-iap with IAPHUB built-in."),(0,n.kt)("h3",{id:"with-google-play"},"With Google Play"),(0,n.kt)("p",null,"For Android, you need separate json file from the service account to get the\n",(0,n.kt)("inlineCode",{parentName:"p"},"access_token")," from ",(0,n.kt)("inlineCode",{parentName:"p"},"google-apis"),", therefore it is impossible to implement serverless."),(0,n.kt)("p",null,"You should have your own backend and get ",(0,n.kt)("inlineCode",{parentName:"p"},"access_token"),".\nWith ",(0,n.kt)("inlineCode",{parentName:"p"},"access_token")," you can simply call ",(0,n.kt)("inlineCode",{parentName:"p"},"validateReceiptAndroid()")," we implemented.\nFurther reading is ",(0,n.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/35127086"},"here")," or refer to ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Bang9/android-get-access-token-example"},"example repo"),"."),(0,n.kt)("h3",{id:"with-app-store"},"With App Store"),(0,n.kt)("h4",{id:"local-validation"},"Local Validation"),(0,n.kt)("p",null,"Local on-device cryptographic validation is not currently supported. More details are here: ",(0,n.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/appstorereceipts/validating_receipts_on_the_device"},"https://developer.apple.com/documentation/appstorereceipts/validating_receipts_on_the_device")),(0,n.kt)("h4",{id:"validating-with-the-app-store"},"Validating with the App Store"),(0,n.kt)("blockquote",null,(0,n.kt)("p",{parentName:"blockquote"},"WARNING: This method is not recommended for production usage, and Apple explicitly warn against it in their docs: ",(0,n.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/storekit/original_api_for_in-app_purchase/validating_receipts_with_the_app_store"},"https://developer.apple.com/documentation/storekit/original_api_for_in-app_purchase/validating_receipts_with_the_app_store"))),(0,n.kt)("p",null,"This can be used as a convenience method for developing and testing receipt validation through the development lifecycle."),(0,n.kt)("p",null,"Currently, validating receipts with the App Store is possible locally using ",(0,n.kt)("inlineCode",{parentName:"p"},"validateReceiptIos()"),"."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The first parameter, you should pass ",(0,n.kt)("inlineCode",{parentName:"li"},"transactionReceipt")," which returns after ",(0,n.kt)("inlineCode",{parentName:"li"},"buyProduct()"),"."),(0,n.kt)("li",{parentName:"ul"},"The second parameter, you should pass whether this is ",(0,n.kt)("inlineCode",{parentName:"li"},"test")," environment.\nIf ",(0,n.kt)("inlineCode",{parentName:"li"},"true"),", it will request to ",(0,n.kt)("inlineCode",{parentName:"li"},"sandbox")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"false")," it will request to ",(0,n.kt)("inlineCode",{parentName:"li"},"production"),".")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-ts"},"const receiptBody = {\n  'receipt-data': purchase.transactionReceipt,\n  password: '******', // app shared secret, can be found in App Store Connect\n};\nconst result = await RNIap.validateReceiptIos(receiptBody, false);\nconsole.log(result);\n")),(0,n.kt)("p",null,"For further information, please refer to ",(0,n.kt)("a",{parentName:"p",href:"https://developer.apple.com/library/content/releasenotes/General/ValidateAppStoreReceipt/Chapters/ValidateRemotely.html"},"guide"),"."),(0,n.kt)("p",null,"Sometimes you will need to get the receipt at times other than after purchase.\nFor example, when a user needs to ask for permission to buy a product (",(0,n.kt)("inlineCode",{parentName:"p"},"Ask to buy"),"\nflow) or unstable internet connections."),(0,n.kt)("p",null,"For these cases we have a convenience method ",(0,n.kt)("inlineCode",{parentName:"p"},"getReceiptIOS()")," which gets\nthe latest receipt for the app at any given time. The response is base64 encoded."),(0,n.kt)("h3",{id:"example-backend-nodejs"},"Example backend (Node.js)"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/mifi/in-app-subscription-example"},"Here")," you can find an example backend for idempotent validating of receipts on both iOS/Android and storing and serving subscription state to the client."))}c.isMDXComponent=!0}}]);